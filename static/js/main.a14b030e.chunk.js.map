{"version":3,"sources":["components/Header.js","components/Keg.js","components/KegList.js","components/ReusableForm.js","components/NewKegForm.js","components/KegDetail.js","components/EditKegForm.js","actions/ActionTypes.js","actions/index.js","components/KegControl.js","components/App.js","reducers/index.js","reducers/keg-list-reducer.js","reducers/form-visible-reducer.js","reducers/selected-keg-reducer.js","index.js"],"names":["Header","className","Keg","props","id","onClick","whenKegClicked","name","brand","quantity","KegList","Object","values","kegList","map","keg","onKegSelection","alcoholContent","price","flavor","description","ReusableForm","onSubmit","formSubmissionHandler","type","placeholder","htmlFor","rows","buttonText","NewKegForm","event","preventDefault","onNewKegCreation","target","value","parseInt","v4","KegDetail","stockMessage","onClickingDelete","onClickingBuy","onClickingRestock","numberInput","React","createRef","hidden","ref","current","onClickingEdit","EditKegForm","onEditKeg","ADD_KEG","DELETE_KEG","TOGGLE_FORM","SELECT_KEG","DESELECT_KEG","addKeg","c","toggleForm","selectKeg","deselectKeg","KegControl","handleClick","selectedKeg","dispatch","a","setState","editing","handleAddingNewKegToList","newKeg","handleChangingSelectedKeg","masterKegList","handleBuyKeg","thisKeg","handleRestockKeg","restockAmount","handleDeletingKeg","handleEditClick","handleEditingKegInList","kegToEdit","state","currentlyVisibleState","this","formVisibleOnPage","Component","connect","App","rootReducer","combineReducers","action","decription","assign","newState","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a14b030e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n  return(\n    <h1 className=\"display-2 d-block p-2 bg-secondary text-white\">Tap-Room</h1>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Keg(props){\n  return(\n    <>\n      <div className=\"card mb-3 px-3\" id=\"keg-list-item\" onClick= {() => props.whenKegClicked(props.id)}>\n        <h2 className=\"card-title display-3\">{props.name} <span className=\"text-secondary display-4\">{props.brand}</span></h2>\n        <p className=\"fs-5\">Available Pints: {props.quantity}</p>\n      </div>\n    </>\n  );\n}\n\nKeg.propTypes = {\n  name: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  alcoholContent: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  flavor: PropTypes.string,\n  description: PropTypes.string,\n  quantity: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  whenKegClicked: PropTypes.func\n}\n\nexport default Keg;","import React from 'react';\nimport Keg from './Keg';\nimport PropTypes from 'prop-types';\n\nfunction KegList(props){\n  return(\n    <>\n      {Object.values(props.kegList).map((keg)=>\n        <Keg \n        whenKegClicked = {props.onKegSelection}\n        name={keg.name}\n        brand={keg.brand}\n        alcoholContent={keg.alcoholContent}\n        price={keg.price}\n        flavor={keg.flavor}\n        description={keg.description}\n        quantity={keg.quantity} \n        id={keg.id}\n        key={keg.id} />\n      )}\n    </>\n  );\n}\n\nKegList.propTypes = {\n  kegList: PropTypes.object,\n  onKegSelected: PropTypes.func\n}\n\nexport default KegList;","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ReusableForm(props) {\n  return (\n    <>\n        <form onSubmit={props.formSubmissionHandler} >\n          <div className=\"form-floating mb-3\">\n            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Product Name\" />\n            <label htmlFor=\"name\">Product Name</label>\n          </div>\n          <div className=\"form-floating mb-3\">\n            <input type=\"text\" className=\"form-control\" name=\"brand\" placeholder=\"Brand Name\" />\n            <label htmlFor=\"brand\">Brand Name</label>\n          </div>\n          <div className=\"form-floating mb-3\">\n            <input type=\"text\" className=\"form-control\" name=\"alcoholContent\" placeholder=\"Alcohol Content\" />\n            <label htmlFor=\"Alcohol Content\">Alcohol Content</label>\n          </div>\n          <div className=\"form-floating mb-3\">\n            <input type=\"number\" className=\"form-control\" name=\"price\" placeholder=\"Price\" />\n            <label htmlFor=\"price\">Price</label>\n          </div>\n          <div className=\"form-floating mb-3\">\n            <input type=\"text\" className=\"form-control\" name=\"flavor\" placeholder=\"Flavor\" />\n            <label htmlFor=\"flavor\">Flavor</label>\n          </div>\n          <div className=\"form-floating mb-3\">\n            <textarea className=\"form-control\" name=\"description\" placeholder=\"Description\" rows=\"5\" />\n            <label htmlFor=\"description\">Description</label>\n          </div>\n          <div className=\"form-floating mb-3\">\n            <input type=\"number\"className=\"form-control\"  name=\"quantity\" placeholder=\"Quantity in Pints\" />\n            <label htmlFor=\"quantity\">Quantity in Pints</label>\n          </div>\n          <div className=\"d-grid pb-2\">\n            <button type=\"submit\" className=\"btn btn-secondary\">{props.buttonText}</button>\n          </div>\n        </form>\n    </>\n  );\n}\n\nReusableForm.propTypes = {\n  formSubmissionHandler: PropTypes.func,\n  buttonText: PropTypes.string\n}\n\nexport default ReusableForm;","\nimport React from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport ReusableForm from './ReusableForm';\n\nfunction NewKegForm(props) {\n\n  function handleNewKegFormSubmission(event){\n    event.preventDefault();\n    props.onNewKegCreation({\n      name: event.target.name.value,\n      brand: event.target.brand.value,\n      alcoholContent: event.target.brand.value,\n      price: parseInt(event.target.price.value),\n      flavor: event.target.flavor.value,\n      description: event.target.description.value,\n      quantity: parseInt(event.target.quantity.value),\n      id: v4()\n    });\n  }\n\n  return(\n    <>\n      <ReusableForm\n        formSubmissionHandler={handleNewKegFormSubmission}\n        buttonText=\"Submit\" />\n    </>\n  );\n}\n\nNewKegForm.propTypes = {\n  onNewKegCreation: PropTypes.func\n};\n\nexport default NewKegForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction KegDetail(props){\n  const { keg, onClickingDelete, onClickingBuy, onClickingRestock } = props;\n  let stockMessage;\n  let numberInput = React.createRef();\n\n  if(keg.quantity <= 0) {\n    stockMessage = \"Currently Out of Stock.\";\n  } else if (keg.quantity <= 10) {\n    stockMessage = \"*Low Stock* \" + keg.quantity + \" pints\";\n  } else {\n    stockMessage = keg.quantity + \" pints\";\n  }\n\n  return (\n    <>\n      <h1 className=\"display-3 ps-1\">Product Details</h1>\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">\n          <h2>{keg.name}</h2>\n        </div>\n        <div className=\"card-body\">\n          <p>Brand: {keg.brand}</p>\n          <p>Alcohol Content: {keg.alcoholContent}</p>\n          <p>Price: ${keg.price}</p>\n          <p>Flavor: {keg.flavor}</p>\n          <p>Description: {keg.description}</p>\n          <hr />\n          <p><span className=\"fs-5\">Current Stock: </span>{stockMessage}</p>\n        </div>\n        <div className=\"card-footer\">\n          \n          <div className=\"row\">\n            <button className=\"btn btn-secondary col m-1\" hidden={keg.quantity===0} onClick={()=> onClickingBuy(keg.id)}>Buy</button>\n\n            <input className=\"col m-1 ms-5\" ref={numberInput} type='number' name='restock' placeholder='restock quantity'/>\n            <button className=\"btn btn-secondary m-1 col\" onClick={()=> onClickingRestock(keg.id, parseInt(numberInput.current.value))}>Restock</button>\n          </div>\n\n          <div className=\"row\">\n            <button className=\"btn btn-secondary col m-1\" onClick={() => props.onClickingEdit(keg.id) }>Edit Keg</button>\n          </div>\n\n          <div className=\"row\">\n            <button className=\"btn btn-secondary col m-1\" onClick={()=> onClickingDelete(keg.id)}>Delete Keg</button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nKegDetail.propTypes = {\n  keg: PropTypes.object,\n  onClickingDelete: PropTypes.func,\n  onClickingBuy: PropTypes.func,\n  onClickingRestock: PropTypes.func,\n  onClickingEdit: PropTypes.func\n}\n\nexport default KegDetail;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReusableForm from \"./ReusableForm\";\n\nfunction EditKegForm (props) {\n  const { keg } = props;\n\n  function handleEditKegFormSubmission(event) {\n    event.preventDefault();\n    props.onEditKeg({\n      name: event.target.name.value,\n      brand: event.target.brand.value,\n      alcoholContent: event.target.brand.value,\n      price: event.target.price.value,\n      flavor: event.target.flavor.value,\n      description: event.target.description.value,\n      quantity: event.target.quantity.value,\n      id: keg.id\n    });\n  }\n  return(\n    <>\n    <ReusableForm\n      formSubmissionHandler={handleEditKegFormSubmission}\n      buttonText=\"Update Keg\" />\n    </>\n  );\n}\n\nEditKegForm.propTypes = {\n  keg: PropTypes.object,\n  onEditKeg: PropTypes.func\n};\n\nexport default EditKegForm;","export const ADD_KEG = 'ADD_KEG';\nexport const DELETE_KEG = 'DELETE_KEG';\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\nexport const SELECT_KEG = 'SELECT_KEG'; \nexport const DESELECT_KEG = 'DESELECT_KEG';","import * as c from './ActionTypes';\n\nexport const addKeg = (keg) => {\n  const {name, brand, alcoholContent, price, flavor, description, quantity, id} = keg;\n  return {\n    type: c.ADD_KEG,\n    name,\n    brand,\n    alcoholContent,\n    price,\n    flavor,\n    description,\n    quantity,\n    id\n  }\n}\n\nexport const deleteKeg = (id) => ({\n  type: c.DELETE_KEG,\n  id\n});\n\nexport const toggleForm = () => ({\n  type: c.TOGGLE_FORM\n});\n\nexport const selectKeg = (keg) => ({\n  type: c.SELECT_KEG,\n  keg\n});\n\nexport const deselectKeg = () => ({\n  type: c.DESELECT_KEG\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport KegList from './KegList';\nimport NewKegForm from './NewKegForm';\nimport KegDetail from './KegDetail';\nimport EditKegForm from './EditKegForm';\nimport * as a from './../actions';\n\nclass KegControl extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      editing: false\n    };\n  }\n\n  handleClick = () => {\n    if(this.props.selectedKeg != null) {\n      const {dispatch} = this.props;\n      const action = a.deselectKeg();\n      dispatch(action);\n      this.setState({\n        editing: false\n      });\n    } else {\n      const { dispatch } = this.props;\n      const action = a.toggleForm();\n      dispatch(action);\n    }\n  }\n\n  handleAddingNewKegToList = (newKeg) => {\n    const { dispatch } = this.props;\n    const action = a.addKeg(newKeg);\n    dispatch(action);\n    const action2 = a.toggleForm();\n    dispatch(action2);\n  }\n\n  handleChangingSelectedKeg = (id) => {\n    const { dispatch } = this.props;\n    const selectedKeg = this.props.masterKegList[id];\n    const action = a.selectKeg(selectedKeg);\n    dispatch(action);\n  }\n\n  handleBuyKeg = (id) => {\n    const { dispatch } = this.props;\n    const thisKeg = this.props.masterKegList[id];\n    thisKeg.quantity = thisKeg.quantity - 1;\n    const action = a.addKeg(thisKeg);\n    dispatch(action);\n    const selectedKeg = this.props.masterKegList[id];\n    const action2 = a.selectKeg(selectedKeg);\n    dispatch(action2);\n  }\n\n  handleRestockKeg = (id, restockAmount) => {\n    const { dispatch } = this.props;\n    const thisKeg = this.props.masterKegList[id];\n    thisKeg.quantity = thisKeg.quantity + restockAmount;\n    const action = a.addKeg(thisKeg);\n    dispatch(action);\n    const selectedKeg = this.props.masterKegList[id];\n    const action2 = a.selectKeg(selectedKeg);\n    dispatch(action2);\n  }\n\n  handleDeletingKeg = (id) => {\n    const { dispatch } = this.props;\n    const action = a.deleteKeg(id);\n    dispatch(action);\n    const action2 = a.deselectKeg();\n    dispatch(action2);\n  }\n\n  handleEditClick = () => {\n    this.setState({ editing: true });\n  }\n\n  handleEditingKegInList = (kegToEdit) => {\n    const { dispatch } = this.props;\n    const action = a.addKeg(kegToEdit);\n    dispatch(action);\n    const action2 = a.deselectKeg();\n    dispatch(action2);\n    this.setState({\n      editing:false,\n    });\n  }\n\n  render () {\n    let currentlyVisibleState = null;\n    let buttonText = null;\n    if(this.state.editing){\n      currentlyVisibleState = \n      <EditKegForm\n        keg = {this.props.selectedKeg}\n        onEditKeg = {this.handleEditingKegInList} />\n      buttonText=\"Return to List\";\n    } else if(this.props.selectedKeg != null){\n      currentlyVisibleState = \n      <KegDetail \n        keg = {this.props.selectedKeg} \n        onClickingBuy = {this.handleBuyKeg} \n        onClickingRestock = {this.handleRestockKeg}\n        onClickingDelete = {this.handleDeletingKeg}\n        onClickingEdit = {this.handleEditClick} />\n      buttonText='Return to List';\n    } else if(this.props.formVisibleOnPage){\n      currentlyVisibleState = \n      <NewKegForm \n        onNewKegCreation = {this.handleAddingNewKegToList} />\n      buttonText = \"Return to List\";\n    } else {\n      currentlyVisibleState = \n      <KegList \n        kegList = {this.props.masterKegList} \n        onKegSelection = {this.handleChangingSelectedKeg}/>;\n      buttonText = 'Add New Beer';\n    }\n\n    return (\n      <>\n        {currentlyVisibleState}\n        <button className=\"btn btn-secondary\" onClick={this.handleClick}>{buttonText}</button>\n      </>\n    );\n  }\n}\n\nKegControl.propTypes = {\n  masterKegList: PropTypes.object,\n  formVisibleOnPage: PropTypes.bool,\n  selectedKeg: PropTypes.object\n}\n\nconst mapStateToProps = state => {\n  return {\n    masterKegList: state.masterKegList,\n    formVisibleOnPage: state.formVisibleOnPage,\n    selectedKeg: state.selectedKeg\n  }\n}\n\nKegControl = connect(mapStateToProps)(KegControl);\n\nexport default KegControl;","import React from 'react';\nimport Header from './Header';\nimport KegControl from './KegControl';\n\n\nfunction App() {\n  return (\n    <>\n      <Header /> \n      <div className=\"container\">\n        <div className=\"card col-lg-6 offset-lg-3 p-3 mt-3\" id=\"custom-card\">\n          <KegControl />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import kegListReducer from './keg-list-reducer';\nimport formVisibleReducer from './form-visible-reducer';\nimport { combineReducers } from 'redux';\nimport selectedKegReducer from './selected-keg-reducer';\n\nconst rootReducer = combineReducers({\n  masterKegList: kegListReducer,\n  formVisibleOnPage: formVisibleReducer,\n  selectedKeg: selectedKegReducer\n});\n\nexport default rootReducer;","import * as c from './../actions/ActionTypes';\n\nexport default (state = {}, action) => {\n  const {name, brand, alcoholContent, price, flavor, decription, quantity, id} = action;\n  switch(action.type){\n    case c.ADD_KEG:\n      return Object.assign({}, state, {\n        [id]: {\n          name,\n          brand,\n          alcoholContent,\n          price,\n          flavor,\n          decription,\n          quantity,\n          id\n        }\n      });\n    case c.DELETE_KEG:\n      let newState = {...state};\n      delete newState[id];\n      return newState;\n\n    default:\n      return state;\n  }\n}","import * as c from './../actions/ActionTypes';\n\nexport default (state = false, action) => {\n  switch (action.type) {\n    case c.TOGGLE_FORM:\n      return !state;\n  default:\n    return state;\n  }\n};","import * as c from './../actions/ActionTypes';\n\nexport default (state = null, action) => {\n  switch(action.type){\n    case c.SELECT_KEG:\n      return action.keg;\n    case c.DESELECT_KEG:\n      return null;\n    default:\n      return state; \n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css' \nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}